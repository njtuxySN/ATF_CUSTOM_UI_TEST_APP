<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[	function runIsReadonlyCommand(mugshot){
		return window.top.g_automate.isReadOnly(mugshot);
	}

	function runClickCommand(mugshot){
		return window.top.g_automate.click(mugshot);
	}

	function runSetValueCommand(mugshot, value) {
		return window.top.g_automate.setValue(mugshot, value);
	}
		
    
    // The corresponding html page should have component ID like: i_button, i_button_readonly, i_date_disabled, etc
    function get_mugshot_id_of_component(input_type, extra_attribute){
    	if(extra_attribute ==""){
		    return "{\"id\":\"i_" + input_type + "\"}";
    	}else{
			return "{\"id\":\"i_" + input_type + "_" + extra_attribute+ "\"}";
    	}    	
    }		
		
		

	//input type, isReadonly, isClickable
	var regular_clickable_components = [
		['tagButton', 0, 1],
	    ['button', 0, 1],
		['file', 0, 1],
		['image', 0, 1],
		['reset', 0, 1],
		['submit', 0, 1]
	];


	//input type, isReadonly, isClickable
	var readonly_clickable_components = [
	    ['button', 1, 0],
		['file', 1, 0],
		['image', 1, 0],
		['reset', 1, 0],
		['submit', 1, 0],
		['tagButton', 1, 0],
	];

describe("Test the regular clickable components are not read-only!", function() {
		for(var i=0; i<regular_clickable_components.length; i++){
		input_type = regular_clickable_components[i][0];
		expectedIsReadonly = regular_clickable_components[i][1];
		runIsReadonlyTests(input_type, expectedIsReadonly, "");
	}	
});


describe("Test the regular clickable components are clickable!", function() {
		for(var i=0; i<regular_clickable_components.length; i++){
		input_type = regular_clickable_components[i][0];
		expectedIsReadonly = regular_clickable_components[i][1];
		expectedIsClickable = regular_clickable_components[i][2];
		runIsClickableTests(input_type, expectedIsClickable, "");
	}	
});

describe("Test the readonly clickable components are readonly!", function() {
		for(var i=0; i<readonly_clickable_components.length; i++){
		input_type = readonly_clickable_components[i][0];
		expectedIsReadonly = readonly_clickable_components[i][1];
		expectedIsClickable = readonly_clickable_components[i][2];
		runIsReadonlyTests(input_type, expectedIsReadonly, "readonly");
		runIsClickableTests(input_type, expectedIsClickable, "readonly");			
	}	
});




    
		
function runIsReadonlyTests(input_type, expectedIsReadonly, attribute){
	
		if (expectedIsReadonly) {
	            it("input type: " + input_type + " should be readonly", function() {
	                var mugshot = get_mugshot_id_of_component(input_type, attribute);
	                var response = runIsReadonlyCommand(mugshot);
	                expect(response.success).toBe(true, mugshot + " is expected to be readonly but the response is: " + response.success);
	            });
		}
		
		if (!expectedIsReadonly) {
	        it("input type: " + input_type + " should be not readonly", function() {
	            var mugshot = get_mugshot_id_of_component(input_type, attribute);
	            var response = runIsReadonlyCommand(mugshot);
	            expect(response.success).toBe(false, mugshot + " is expected to be NOT readonly but the response is: " + response.success);
	        });

		}	
}

function runIsClickableTests(input_type, expectedIsClickable, attribute){	
		if (expectedIsClickable) {
	            it("input type: " + input_type + " should be clickable", function() {
	                var mugshot = get_mugshot_id_of_component(input_type, attribute);
	                var response = runClickCommand(mugshot);
	                expect(response).toBe(true, mugshot + " is expected to be clickable but the response is: " + response.msg_key);
	            });
		}
		
		if (!expectedIsClickable) {
	        it("input type: " + input_type + " should be not clickable", function() {
	            var mugshot = get_mugshot_id_of_component(input_type, attribute);
	            var response = runClickCommand(mugshot);
	            expect(response).toBe(false, mugshot + " is expected to be NOT clickable but the response is: " + msg_key);
	        });

		}	
}
	
]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_atf_test_app_wit_jtest_for_clickable_components.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<script src="x_atf_test_app_wit.jasmine_3_1.jsdbx"/>
 <script src="x_atf_test_app_wit.jasmine_html.jsdbx"/>
 <script src="x_atf_test_app_wit.boot.js.jsdbx"/>
 <link href="6ff66fd5ac731300ba899cabc2c7e328.cssdbx" rel="stylesheet" type="text/css"></link>
 <script src="/scripts/js_includes_g_automate.js"/>

	<h1> clickable components </h1>

		<fieldset>
    <legend>
        <h2> button </h2>
    </legend>
			<button id="i_tagButton"> this is a tag button </button>
			<button id="i_tagButton_disabled" disabled="disabled"> this is a disabled tag button </button>
			<button id="i_tagButton_readonly" readonly='readonly'> this is a readonly tag button </button>
	</fieldset>
	<fieldset>
    <legend>
        <h2> button </h2>
    </legend>
    <form>
        <!-- Default button: <input type="button"  class="btn" value="Click Me" onclick=myFunction('Harry Potter')/>  -->
        <div>
            <label> regular button </label>
            <input type="button" id="i_button" class="btn" value="default button" onclick="myFunction('default button clicked!')" />
        </div>
        <div>
            <label> disabled button </label>
            <input type="button" id="i_button_disabled" class="btn" value="I am disabled" disabled="disabled" onclick="myFunction('disabled button clicked!')" />
        </div>
        <div>
            <label> readonly button is not supported! </label>
            <input type="button" id="i_button_readonly" class="btn" value="I am readonly" readonly="readonly" onclick="myFunction('disabled button clicked!')" />
        </div>
        <div>
            <label> button with <u><b>A</b></u>ccesskey: </label>
            <input type="button" id="i_button_with_access_key" class="btn" value="Accesskey enabled" accesskey="a" />
        </div>
    </form>
</fieldset>
	
	
	<fieldset>
    <legend>
        <h2> file </h2>
    </legend>
    <div>
        <label for="avatar">Profile picture:</label>
        <input type="file" id="i_file" name="avatar" accept="image/png, image/jpeg" />
    </div>
    <div>
        <label for="avatar">Disabled file selector:</label>
        <input type="file" id="i_file_disabled" name="file_disabled" accept="image/png, image/jpeg" disabled="disabled" />
    </div>
    <div>
        <label for="avatar">Readonly file selector is not supported!</label>
        <input type="file" id="i_file_readonly" name="file_readonly" accept="image/png, image/jpeg" readonly="readonly" />
    </div>
</fieldset>
	
	<fieldset>
    <legend>
        <h2> image </h2>
    </legend>
    <input type="image" id="i_image" alt="Login" width="248" height="48" src="https://www.servicenow.com/content/dam/servicenow-assets/images/footer/servicenow-footer-logo.svg" />
</fieldset>

	<fieldset>
    <legend>
        <h2> password and reset </h2>
    </legend>
    <form>
        <div>
            <label>User ID:</label>
            <input type="text" id="i_reset_id" name="id" />
            <label>Password:</label>
            <input type="password" id="i_password" name="password" value="defaultPassword" minLength="8" required="required" placeholder="8 characters minimum" />
            <input type="reset" id="i_reset" value="Reset" />
        </div>
        <div>
            <label>disabled password</label>
            <input type="password" id="i_password_disabled" name="password" minLength="8" required="required" placeholder="8 characters minimum" disabled="disabled" />
        </div>
        <div>
            <label>readonly password</label>
            <input type="password" id="i_password_readonly" name="password" minLength="8" required="required" placeholder="8 characters minimum" readonly="readonly" />
        </div>
        <input type="submit" id="submit_user_name_and_password"> </input>
    </form>
</fieldset>

	<fieldset>
    <legend>
        <h2> time </h2>
    </legend>
    <div class="control">
        <form action="/x_atf_test_app_wit_submit_result_page" method="get">
            <div>
                <label>Office hours: only allows 9AM to 6PM</label>
                <input type="time" id="i_time" name="appt-time" min="09:00:00" max="18:00:00" required="required" value="02:02"> </input>
            </div>
            <div>
                <label>Disabled time</label>
                <input type="time" id="i_time_disabled" name="appt-time_disabled" min="9:00" max="18:00" required="required" disabled="disabled" value="03:03" />
            </div>
            <div>
                <label>Readonly time</label>
                <input type="time" id="i_time_readonly" name="appt-time_readonly" min="9:00" max="18:00" required="required" readonly="readonly" value="04:04" />
            </div>
            <input type="submit" id="submit_time"> </input>
        </form>
    </div>
</fieldset>
	
<fieldset>
    <form>
        <legend>
			<h2> 
				Select a ServiceNow office location:
			</h2>
				
		</legend>
        <div>
            <input type="radio" id="SanFrancisco" name="snowoffice" checked="checked" />
            <label for="SanFrancisco">San Francisco</label>
        </div>
        <div>
            <input type="radio" id="SanDiego" name="snowoffice" />
            <label for="SanDiego">San Diego</label>
        </div>
        <div>
            <input type="radio" id="SantaClara" name="snowoffice" />
            <label for="SantaClara">Santa Clara</label>
        </div>
    </form>
</fieldset>
	
	
</j:jelly>]]></html>
        <name>jtest_for_clickable_components</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-14 21:38:13</sys_created_on>
        <sys_id>aeffdfa3f4731300ba89eb7a953c2065</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>jtest_for_clickable_components</sys_name>
        <sys_package display_value="ATF_TEST_APP_WITH_CUSTOM_UIs" source="x_atf_test_app_wit">d6e05688b4331300ba892e9f28ae798f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATF_TEST_APP_WITH_CUSTOM_UIs">d6e05688b4331300ba892e9f28ae798f</sys_scope>
        <sys_update_name>sys_ui_page_aeffdfa3f4731300ba89eb7a953c2065</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-08-17 20:52:17</sys_updated_on>
    </sys_ui_page>
</record_update>
